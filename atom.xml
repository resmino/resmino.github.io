<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Resmino&#39;s Blog</title>
  
  <subtitle>小张的爬行笔记</subtitle>
  <link href="https://resmino.github.io/atom.xml" rel="self"/>
  
  <link href="https://resmino.github.io/"/>
  <updated>2023-08-06T05:30:44.288Z</updated>
  <id>https://resmino.github.io/</id>
  
  <author>
    <name>Resmino</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二叉树的几种遍历方式</title>
    <link href="https://resmino.github.io/2023/08ed7e80a0.html"/>
    <id>https://resmino.github.io/2023/08ed7e80a0.html</id>
    <published>2023-08-05T09:01:21.000Z</published>
    <updated>2023-08-06T05:30:44.288Z</updated>
    
    <content type="html"><![CDATA[<p>对于二叉树的前中后序排序是根据根节点的访问顺序确定的。</p><h1 id="前序遍历"><a href="#前序遍历" class="headerlink" title="前序遍历"></a>前序遍历</h1><ul><li>访问顺序：根-左-右</li></ul><h1 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h1><ul><li>访问顺序：左-根-右</li></ul><h1 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h1><ul><li>访问顺序：左-右-根</li></ul>]]></content>
    
    
    <summary type="html">数据结构-二叉树的几种遍历方式</summary>
    
    
    
    <category term="数据结构" scheme="https://resmino.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://resmino.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>KMP算法</title>
    <link href="https://resmino.github.io/2023/082da0528d.html"/>
    <id>https://resmino.github.io/2023/082da0528d.html</id>
    <published>2023-08-05T07:29:35.000Z</published>
    <updated>2023-08-06T05:30:44.288Z</updated>
    
    <content type="html"><![CDATA[<h1 id="KMP算法简介"><a href="#KMP算法简介" class="headerlink" title="KMP算法简介"></a>KMP算法简介</h1><ul><li><p><code>KMP</code>（Knuth-Morris-Pratt）算法是一种用于在一个文本串<code>S</code>中查找一个模式串P出现位置的字符串匹配算法。它的时间复杂度为<code>O(N+M)</code>，其中N是文本串的长度，M是模式串的长度。相比传统的字符串匹配算法（如朴素的暴力匹配算法），KMP算法具有更高的效率。</p></li><li><p>KMP算法的核心思想是<strong>利用已经匹配过的信息，避免不必要的回溯，从而减少匹配的次数</strong>。具体来说，它在匹配过程中维护一个<strong>部分匹配表（Partial Match Table）</strong>，用于指导下一步的匹配位置。<strong>部分匹配表记录了模式串中前缀和后缀的最长相等长度</strong>，这样可以根据部分匹配表的信息在匹配过程中跳过一些不可能匹配的位置，从而加快匹配的速度。</p></li><li><p>直白的说，kmp就是在一个字符串中查找字串所在的位置，只不过它通过查找字串的前后缀来移动，减少匹配次数</p></li></ul><h1 id="KMP算法步骤"><a href="#KMP算法步骤" class="headerlink" title="KMP算法步骤"></a>KMP算法步骤</h1><p>以下是KMP算法的实现步骤：</p><ol><li>构建部分匹配表（Partial Match Table）：对于模式串P，计算以每个位置结尾的子串的最长相等前缀后缀的长度。</li><li>进行匹配：在文本串S中从左到右遍历，同时在模式串P中根据部分匹配表进行跳跃匹配。</li></ol><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><p>下面给出KMP算法的Java代码示例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KMPAlgorithm</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 构建部分匹配表</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">buildPartialMatchTable</span><span class="token punctuation">(</span><span class="token class-name">String</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> table <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>pattern<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pattern<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> pattern<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> pattern<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                j <span class="token operator">=</span> table<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> pattern<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                j<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> table<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// KMP算法匹配</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">kmpMatch</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token class-name">String</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> table <span class="token operator">=</span> <span class="token function">buildPartialMatchTable</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> text<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> text<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> pattern<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                j <span class="token operator">=</span> table<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> pattern<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                j<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> pattern<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 匹配成功，返回模式串在文本串中的起始位置</span>                <span class="token keyword">return</span> i <span class="token operator">-</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 匹配失败，返回-1</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">"ABABABABCABABABABCABABABABC"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> pattern <span class="token operator">=</span> <span class="token string">"ABABC"</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token function">kmpMatch</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Pattern found at index: "</span> <span class="token operator">+</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Pattern not found in the text."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们用<code>kmpMatch</code>方法进行文本串和模式串的匹配，并返回模式串在文本串中的起始位置。如果找不到匹配，则返回-1。</p><p>注意：KMP算法的关键是构建部分匹配表，它影响了匹配的效率。在实际应用中，如果需要多次对相同的模式串进行匹配，最好预先计算并保存部分匹配表，然后进行多次匹配。这样可以避免重复计算，提高效率。</p>]]></content>
    
    
    <summary type="html">算法学习-</summary>
    
    
    
    <category term="算法学习" scheme="https://resmino.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="https://resmino.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="算法学习" scheme="https://resmino.github.io/tags/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java选择结构小练习</title>
    <link href="https://resmino.github.io/2023/088f908750.html"/>
    <id>https://resmino.github.io/2023/088f908750.html</id>
    <published>2023-08-05T06:13:52.000Z</published>
    <updated>2023-08-05T06:51:26.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>用户输入消费金额，然后选择换购产品，根据输入计算消费总额，并输出结果，综合使用<code>if</code>和<code>switch</code>实现，具体要求如下所示：</p><img data-src="/2023/088f908750/image-20230805142407431.png" class><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">no01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入消费金额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> money <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是否参加优惠换购活动："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1:满50元，加2元换购百事可乐饮料1瓶"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2:满100元，加3元换购500ml可乐1瓶"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3:满100元，加10元换购5公斤面粉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"4:满200元，加10元换购1个苏泊尔炒菜锅"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"5:满200元，加20元换购欧莱雅爽肤水1瓶"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"0:不换购"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请选择:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> op <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"本次消费总金额："</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"本次消费总金额："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>money <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n成功换购：百事可乐饮料1瓶"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消费金额不满足换购条件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"本次消费总金额："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>money <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n成功换购：500ml可乐1瓶"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消费金额不满足换购条件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"本次消费总金额："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>money <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n成功换购：5公斤面粉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消费金额不满足换购条件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"本次消费总金额："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>money <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n成功换购：1个苏泊尔炒菜锅"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消费金额不满足换购条件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"本次消费总金额："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>money <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n成功换购：欧莱雅爽肤水1瓶"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消费金额不满足换购条件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入有误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入成绩，根据成绩区间显示奖励，奖励区间如下所示：</p><ul><li>&lt;60: 无奖励</li><li>‘&gt;&#x3D;’60 &amp;&amp; &lt;90:奖励习题册</li><li>‘&gt;&#x3D;’90 &amp;&amp; &lt;100 : 奖励MP4</li><li>100：奖励一辆车（玩具哦）</li></ul><p>如下图所示：</p><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><ul><li><code>if</code>实现</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入小赵的考试成绩："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> score <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//if结构</span><span class="token keyword">if</span><span class="token punctuation">(</span>score <span class="token operator">==</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爸爸奖励一辆车"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">>=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"妈妈奖励一个MP4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">&amp;&amp;</span> score <span class="token operator">&lt;</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"妈妈奖励一本参考书"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"奖励擦肩而过，继续加油吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>switch</code>实现</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//switch结构</span><span class="token keyword">switch</span><span class="token punctuation">(</span>score <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"奖励擦肩而过，继续加油吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>    <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"妈妈奖励一本参考书"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"妈妈奖励一个MP4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爸爸奖励一辆车"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入有误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入三个数，使用if进行排序后输出</p><h2 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">no03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第一个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第二个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第三个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> c <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            temp <span class="token operator">=</span> a<span class="token punctuation">;</span>            a <span class="token operator">=</span> b<span class="token punctuation">;</span>            b <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">></span>c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            temp <span class="token operator">=</span> b<span class="token punctuation">;</span>            b <span class="token operator">=</span> c<span class="token punctuation">;</span>            c <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            temp <span class="token operator">=</span> a<span class="token punctuation">;</span>            a <span class="token operator">=</span> b<span class="token punctuation">;</span>            b <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"三个数从小到大为："</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h1><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入三个数，判断是否能构成三角形，若能，进而判断是否是等边、直角、等腰还是普通三角形，并输出结果</p><h2 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">no04</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第一个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第二个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第三个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> c <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b <span class="token operator">&lt;</span> c <span class="token operator">||</span> a<span class="token operator">+</span>c <span class="token operator">&lt;</span>b <span class="token operator">||</span> b<span class="token operator">+</span>c <span class="token operator">&lt;</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"不能组成三角形"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">==</span>b <span class="token operator">&amp;&amp;</span>  b<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是等边三角形"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">*</span>a <span class="token operator">+</span>b<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">==</span>c<span class="token operator">*</span>c <span class="token operator">||</span> <span class="token punctuation">(</span>a<span class="token operator">*</span>a <span class="token operator">+</span>c<span class="token operator">*</span>c<span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token operator">*</span>b <span class="token operator">||</span> <span class="token punctuation">(</span>c<span class="token operator">*</span>c <span class="token operator">+</span>b<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">==</span>a<span class="token operator">*</span>a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是直角三角形"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> a<span class="token operator">==</span>b <span class="token operator">||</span> b<span class="token operator">==</span>c <span class="token operator">||</span> a<span class="token operator">==</span>c  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是等腰三角形"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是普通三角形"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h1><h2 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入月份，判断季节</p><h2 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">no05</span><span class="token punctuation">(</span><span class="token class-name">Scanner</span> sc<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入月份："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> month <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"春季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"夏季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"秋季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"冬季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入有误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">学习笔记-对于java中选择结构，if,if-else,if-else-if,以及switch的小练习</summary>
    
    
    
    <category term="学习笔记" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java练习" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="java" scheme="https://resmino.github.io/tags/java/"/>
    
    <category term="java教程" scheme="https://resmino.github.io/tags/java%E6%95%99%E7%A8%8B/"/>
    
    <category term="java知识总结" scheme="https://resmino.github.io/tags/java%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java选择结构</title>
    <link href="https://resmino.github.io/2023/084a23ab17.html"/>
    <id>https://resmino.github.io/2023/084a23ab17.html</id>
    <published>2023-08-05T06:13:24.000Z</published>
    <updated>2023-08-05T06:51:26.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><ul><li>对于if结构内需要多条语句时，注意添加{}</li><li>单条语句也建议加上{}</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>express<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太棒了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>express<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太棒了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太差了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="if-else-if-else"><a href="#if-else-if-else" class="headerlink" title="if-else if-else"></a>if-else if-else</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>express1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太棒了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>express2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"还行吧！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太差了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="小练习（判断闰年、平年）"><a href="#小练习（判断闰年、平年）" class="headerlink" title="小练习（判断闰年、平年）"></a>小练习（判断闰年、平年）</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"please input a year:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> year <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">||</span>year<span class="token operator">%</span><span class="token number">400</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">" 是闰年"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">"  是平年"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="嵌套if"><a href="#嵌套if" class="headerlink" title="嵌套if"></a>嵌套if</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入百米成绩："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> score <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜，进入决赛！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入性别:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> sex <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sex<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您已进入男子组决赛！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sex<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您已进入女子组决赛"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的信息有误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"抱歉，您无缘决赛，下次见哦~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入今天是周几："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> week <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>week<span class="token operator">>=</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> week <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>week <span class="token operator">==</span> <span class="token number">6</span> <span class="token operator">||</span> week <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今天是星期"</span><span class="token operator">+</span>week<span class="token operator">+</span><span class="token string">",可以出去happy一下啦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入今天气温："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">float</span> temp <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">>=</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今日气温 ："</span><span class="token operator">+</span>temp<span class="token operator">+</span><span class="token string">" ,今天天气适合游泳哦~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今日气温 ："</span><span class="token operator">+</span>temp<span class="token operator">+</span><span class="token string">", 今天天气适合爬山哦~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今天星期 "</span><span class="token operator">+</span>week<span class="token operator">+</span><span class="token string">", 是工作日哦~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入今天天气（好？差："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> tianQi <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>tianQi<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"好"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这么好的天气，去谈业务吧！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"天气不好，就如你今天的心情，老实上班吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一个星期只有七天呐~ 小迷糊~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>对于多分支if-else语句，需要注意条件的顺序，顺序不合理，会出现错误结果</p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><ul><li>处理等值条件判断的情况</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//switch结构</span>       <span class="token keyword">switch</span><span class="token punctuation">(</span>score <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"奖励擦肩而过，继续加油吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>           <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"妈妈奖励一本参考书"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"妈妈奖励一个MP4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爸爸奖励一辆车"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token keyword">default</span><span class="token operator">:</span>               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入有误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="枚举类Enum"><a href="#枚举类Enum" class="headerlink" title="枚举类Enum"></a>枚举类Enum</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span>  <span class="token keyword">enum</span> <span class="token punctuation">&#123;</span>    <span class="token constant">MONDAY</span><span class="token punctuation">,</span><span class="token constant">SUNDAY</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">学习笔记-Java选择结构小结，用于个人回忆记录版，知识点不详细</summary>
    
    
    
    <category term="学习笔记" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
    <category term="java" scheme="https://resmino.github.io/tags/java/"/>
    
    <category term="java教程" scheme="https://resmino.github.io/tags/java%E6%95%99%E7%A8%8B/"/>
    
    <category term="java知识总结" scheme="https://resmino.github.io/tags/java%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>IDEA配置注释模板</title>
    <link href="https://resmino.github.io/2023/089a2f66ac.html"/>
    <id>https://resmino.github.io/2023/089a2f66ac.html</id>
    <published>2023-08-05T01:45:01.000Z</published>
    <updated>2023-08-05T02:29:03.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置类注释模板"><a href="#配置类注释模板" class="headerlink" title="配置类注释模板"></a>配置类注释模板</h1><ol><li>打开IDEA，选择File-&gt;Setting,如下图所示：</li></ol><img data-src="/2023/089a2f66ac/image-20230805095019915.png" class><ol start="2"><li>在Editor-&gt;File and Code Templates-&gt;includes,或者直接在搜索框搜索File，如下图所示。</li></ol><img data-src="/2023/089a2f66ac/image-20230805095349237.png" class><ol start="3"><li>然后将下面内容粘贴到右侧框里</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/***@BelongsProject: $&#123;PROJECT_NAME&#125;*@BelongsPackage: $&#123;PACKAGE_NAME&#125;*@Author: $&#123;USER&#125;*@CreateTime: $&#123;YEAR&#125;-$&#123;MONTH&#125;-$&#123;DAY&#125;  $&#123;HOUR&#125;:$&#123;MINUTE&#125;*@Description: TODO*@Version: 1.0*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如下图所示：</p><img data-src="/2023/089a2f66ac/image-20230805095849891.png" class><ol start="4"><li>配置好的效果图如下所示：</li></ol><img data-src="/2023/089a2f66ac/image-20230805100226352.png" class><h1 id="配置方法注释模板"><a href="#配置方法注释模板" class="headerlink" title="配置方法注释模板"></a>配置方法注释模板</h1><ol><li>同样是在Setting中，选择Live Templates，点击右侧+号，选择Template group,如下图所示：</li></ol><img data-src="/2023/089a2f66ac/image-20230805100447973.png" class><ol start="2"><li>输入Group名字（自己起），如下所示：</li></ol><img data-src="/2023/089a2f66ac/image-20230805101002134.png" class><ol start="3"><li>然后找到自己新建的group,选中，然后点击+号，选择Live Template，根据如下所示图片进行操作。</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">*</span><span class="token operator">*</span>  <span class="token operator">*</span> <span class="token annotation punctuation">@description</span><span class="token operator">:</span> $description$$params$$<span class="token keyword">return</span>$  <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> $<span class="token constant">USER</span>$ <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> $date$ $time$ <span class="token operator">*</span><span class="token operator">/</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将上面内容粘贴在下图所示位置。</p><img data-src="/2023/089a2f66ac/image-20230805101756237.png" class><ol start="4"><li>上述步骤完成后，点击Edit Variables按钮，显示具体参数如下所示：</li></ol><img data-src="/2023/089a2f66ac/image-20230805102122256.png" class><p>上面参数的表达式照我上面的配置即可</p><ul><li>params的表达式如下</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">groovyScript</span><span class="token punctuation">(</span><span class="token string">"def result=''; def params=\"$&#123;_1&#125;\".replaceAll('[\\\\[|\\\\]|\\\\s]', '').split(',').toList(); for(i = 0; i &lt; params.size(); i++) &#123;result+=' * @param ' + params[i] + ((i &lt; params.size() - 1) ? '\\n' : '')&#125;; return result"</span><span class="token punctuation">,</span> <span class="token function">methodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>return的表达式如下</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">groovyScript</span><span class="token punctuation">(</span><span class="token string">"return \"$&#123;_1&#125;\" == 'void' ? null : '\\r\\n * @return: ' + \"$&#123;_1&#125;\""</span><span class="token punctuation">,</span> <span class="token function">methodReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意这里的return返回的类型会有包名</strong>，如下所示：</p><img data-src="/2023/089a2f66ac/image-20230805102543264.png" class><p>如果不想要包名，直接输入：<code>methodReturnType()</code>即可。</p>]]></content>
    
    
    <summary type="html">给IDEA配置类和方法的注释模板，让你的代码看起来*格更高</summary>
    
    
    
    <category term="软件合集" scheme="https://resmino.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/"/>
    
    <category term="IDEA" scheme="https://resmino.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/IDEA/"/>
    
    
    <category term="IDEA" scheme="https://resmino.github.io/tags/IDEA/"/>
    
    <category term="idea" scheme="https://resmino.github.io/tags/idea/"/>
    
    <category term="IDEA配置注释" scheme="https://resmino.github.io/tags/IDEA%E9%85%8D%E7%BD%AE%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>88.合并两个有序数组</title>
    <link href="https://resmino.github.io/2023/0815739779.html"/>
    <id>https://resmino.github.io/2023/0815739779.html</id>
    <published>2023-08-04T08:03:49.000Z</published>
    <updated>2023-08-04T08:16:52.622Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h1><p><strong>点击跳转</strong>: <span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v">LeetCode-No88. 合并两个有序数组<i class="fa fa-external-link-alt"></i></span></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote><p>当看到这一题的时候，想到了两种解法，有一种是一定可以实现的，另一种可能实现较为麻烦。</p></blockquote><ul><li><p>1、先合并数组，然后直接排序。合并简单，直接一个for循环即可，而排序的话这里有两种方法</p><ul><li><p>使用Arrays.sort()方法直接排序</p></li><li><p>使用冒泡排序</p></li></ul></li><li><p>2、因为是两个有序非递减数组，所以考虑倒序，边比较边排序</p></li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><h2 id="先合并再排序"><a href="#先合并再排序" class="headerlink" title="先合并再排序"></a>先合并再排序</h2><h3 id="代码1（使用sort）"><a href="#代码1（使用sort）" class="headerlink" title="代码1（使用sort）"></a>代码1（使用sort）</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            nums1<span class="token punctuation">[</span>i<span class="token operator">+</span>m<span class="token punctuation">]</span><span class="token operator">=</span>nums2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结果1"><a href="#结果1" class="headerlink" title="结果1"></a>结果1</h3><img data-src="/2023/0815739779/image-20230804161324898.png" class><h3 id="代码2（冒泡）"><a href="#代码2（冒泡）" class="headerlink" title="代码2（冒泡）"></a>代码2（冒泡）</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            nums1<span class="token punctuation">[</span>i<span class="token operator">+</span>m<span class="token punctuation">]</span><span class="token operator">=</span>nums2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> temp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token operator">+</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token operator">+</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span>nums1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    temp <span class="token operator">=</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>nums1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    nums1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结果2"><a href="#结果2" class="headerlink" title="结果2"></a>结果2</h3><img data-src="/2023/0815739779/image-20230804161616211.png" class><h2 id="倒序排序"><a href="#倒序排序" class="headerlink" title="倒序排序"></a>倒序排序</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-Java" data-language="Java"><code class="language-Java">class Solution &#123;     public void merge(int [] nums1,int m, int [] nums2,int n)&#123;        int index &#x3D; m+n-1;        while(n&gt;0 &amp;&amp; m&gt;0)&#123;            if(nums1[m-1]&gt;&#x3D;nums2[n-1])&#123;                nums1[index--]&#x3D;nums1[m-1];                m--;            &#125;else&#123;                nums1[index--]&#x3D;nums2[n-1];                n--;            &#125;        &#125;        if(m&#x3D;&#x3D;0)&#123;           while(n-1&gt;&#x3D;0)&#123;               nums1[index--]&#x3D;nums2[--n];           &#125;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><img data-src="/2023/0815739779/image-20230804161422446.png" class>]]></content>
    
    
    <summary type="html">LeetCode-88.合并两个有序数组题解</summary>
    
    
    
    <category term="LeetCode题解" scheme="https://resmino.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="LeetCode" scheme="https://resmino.github.io/tags/LeetCode/"/>
    
    <category term="Java" scheme="https://resmino.github.io/tags/Java/"/>
    
    <category term="leetcode" scheme="https://resmino.github.io/tags/leetcode/"/>
    
    <category term="leetcode题解" scheme="https://resmino.github.io/tags/leetcode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>小练习01</title>
    <link href="https://resmino.github.io/2023/08f6390c92.html"/>
    <id>https://resmino.github.io/2023/08f6390c92.html</id>
    <published>2023-08-04T05:34:58.000Z</published>
    <updated>2023-08-04T07:18:21.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h1><p>1：编程实现，通过键盘输入6位卡号，求6位数字之和。</p><p>2：编程实现，通过键盘输入天数，求一共有几周零几天。</p><p>3：编程实现：通过键盘输入半径，求圆的周长与面积。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">day0804<span class="token punctuation">.</span>homework</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token comment">/** * @author zzjie * @version 1.0 * @date 2023/8/4 11:56 * @description: 0804作业 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Homework</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Homework</span> homework <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Homework</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入6为卡号: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a<span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"卡号 "</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">" 的各位数字之和为: "</span><span class="token operator">+</span>homework<span class="token punctuation">.</span><span class="token function">toSum</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入天数: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>homework<span class="token punctuation">.</span><span class="token function">toDay</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入圆的半径: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> c<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>homework<span class="token punctuation">.</span><span class="token function">toArea</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token comment">/**     * @description: 1、编程实现，通过键盘输入6位卡号，求6位数字之和。    * @param: num     * @return: int    * @author zzjie    * @date: 2023/8/4 11:59    */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">toSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> num<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">6</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            sum<span class="token operator">+=</span>num<span class="token operator">/</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**      * @description: 2：编程实现，通过键盘输入天数，求一共有几周零几天。     * @param: num      * @return: java.lang.String      * @author zzjie     * @date: 2023/8/4 12:08     */</span>     <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toDay</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> week<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>day<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        week <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">7</span><span class="token punctuation">;</span>        day <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> num<span class="token operator">+</span><span class="token string">" 天，共有 "</span><span class="token operator">+</span>week<span class="token operator">+</span><span class="token string">" 周零 "</span><span class="token operator">+</span>day<span class="token operator">+</span><span class="token string">" 天"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**      * @description:  3：编程实现：通过键盘输入半径，求圆的周长与面积。     * @param: r     * @return: java.lang.String      * @author zzjie     * @date: 2023/8/4 12:15     */</span>     <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toArea</span><span class="token punctuation">(</span><span class="token keyword">double</span> r<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">double</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        s<span class="token operator">=</span><span class="token constant">PI</span><span class="token operator">*</span>r<span class="token operator">*</span>r<span class="token punctuation">;</span>   <span class="token comment">// or s=PI*Math.pow(r,2);</span>        c<span class="token operator">=</span><span class="token constant">PI</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">*</span>r<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"半径为 "</span><span class="token operator">+</span>r<span class="token operator">+</span><span class="token string">" 的圆，圆的周长为: "</span><span class="token operator">+</span>c<span class="token operator">+</span><span class="token string">" ，面积为: "</span><span class="token operator">+</span>s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1>]]></content>
    
    
    <summary type="html">学习笔记-运算符小练习</summary>
    
    
    
    <category term="学习笔记" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java练习" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="java" scheme="https://resmino.github.io/tags/java/"/>
    
    <category term="java教程" scheme="https://resmino.github.io/tags/java%E6%95%99%E7%A8%8B/"/>
    
    <category term="java知识总结" scheme="https://resmino.github.io/tags/java%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java运算符</title>
    <link href="https://resmino.github.io/2023/08778179f.html"/>
    <id>https://resmino.github.io/2023/08778179f.html</id>
    <published>2023-08-04T05:34:21.000Z</published>
    <updated>2023-08-04T07:27:48.052Z</updated>
    
    <content type="html"><![CDATA[<p>#运算符</p><p><strong>使用过程中，注意数据类型（会不会产生数据类型转换）</strong></p><ul><li>‘+’</li><li>‘-’</li><li>‘*’</li><li>‘&#x2F;’</li><li>‘%’: 模运算，求余数</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> demo03 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"please input a four number: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>num<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> d <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"四位数："</span><span class="token operator">+</span><span class="token string">"千位："</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">"百位："</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">"十位"</span><span class="token operator">+</span>c<span class="token operator">+</span><span class="token string">"个位"</span><span class="token operator">+</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d <span class="token operator">></span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"经检测，您为优质用户，恭喜您中奖了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"好运擦肩而过~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>&#x3D;</p></li><li><p>&#x3D;&#x3D;</p><ul><li>对于基本数据类型，可以使用&#x3D;&#x3D;进行比较</li><li>对于引用类型则不可以，eg：对于String，需要使用equals()方法。</li><li>对于数组和引用类型，创建时会有两块地址，一是存放实际数据，另一个是实际数据存放的地址，而使用&#x3D;&#x3D;比较的是地址，equals比较的是数据内容。</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> demo04 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"str1==str2结果："</span><span class="token operator">+</span>str1<span class="token operator">==</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"str1==str2结果："</span><span class="token operator">+</span>str1<span class="token operator">==</span>str3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"str1==str2结果："</span><span class="token operator">+</span>str2<span class="token operator">==</span>str3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"str1==str2结果："</span><span class="token operator">+</span>str2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img data-src="/2023/08778179f/image-20230804101218630.png" class></li><li><p>&amp;&amp;：全为true，从前到后，有一个条件成立就不再继续判断</p></li><li><p>||：有一个成立就不再判断</p></li><li><p>&amp;：不管是否全为true，都会全部判断</p></li><li><p>|：都会全部判断</p></li><li><p>^：异或，相同为0，不同为1</p></li><li><p>~：按位取反</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span> <span class="token punctuation">,</span>b<span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span> c<span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">></span>b <span class="token operator">&amp;&amp;</span> b<span class="token operator">&lt;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">></span>b <span class="token operator">&amp;</span> b<span class="token operator">&lt;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">&lt;</span>b <span class="token operator">&amp;&amp;</span> a<span class="token operator">&lt;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">></span>b <span class="token operator">||</span> c<span class="token operator">&lt;</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">></span>b <span class="token operator">|</span> c<span class="token operator">&lt;</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">></span>b <span class="token operator">|</span> c<span class="token operator">&lt;</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token operator">^</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token operator">^</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token operator">^</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>‘&gt;&gt;’:有符号右移，高位补符号位，低位丢弃</p></li><li><p>‘&lt;&lt;’:左移操作，将数据转换成二进制后，向左移若干位，高位丢弃，低位补零</p></li><li><p>‘&gt;&gt;&gt;’：无符号右移高位补零，低位丢弃</p></li><li><p>express1    ？express2 : express3 条件表达式，当express1成立时，使用express2，反之使用express3</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">></span><span class="token number">2</span> <span class="token operator">?</span> yes <span class="token operator">:</span> no<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// no</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token number">2</span> <span class="token operator">?</span> yes <span class="token operator">:</span> no<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="自增运算"><a href="#自增运算" class="headerlink" title="自增运算"></a>自增运算</h1><ul><li>自增：++<ul><li>a++: 先使用a的值，然后再做自增运算</li><li>++a:先自增，然后再使用a的值</li></ul></li><li>自减：–<ul><li>a–:先使用a的值，然后再做自减运算</li><li>–a:先自减，然后再使用a的值</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> demo01 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">int</span> a<span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>         <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//10</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">--</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//10</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//10</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">++</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//10</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>j<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#运算符优先级</p><img data-src="/2023/08778179f/image-20230804132459473.png" class><p>**<br> * @description: TODO<br> * @author $user$<br> * @date $date$ $time$<br> * @version 1.0<br> *&#x2F;</p><p>&#x2F;**</p><ul><li>@author ${USER}</li><li>@date ${DATE} ${TIME}</li><li>@version 1.0</li><li>@description: TODO<br> *&#x2F;</li></ul>]]></content>
    
    
    <summary type="html">学习笔记-Java运算符，包括运算符的简单使用以及运算符的优先级</summary>
    
    
    
    <category term="学习笔记" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
    <category term="java" scheme="https://resmino.github.io/tags/java/"/>
    
    <category term="java教程" scheme="https://resmino.github.io/tags/java%E6%95%99%E7%A8%8B/"/>
    
    <category term="java知识总结" scheme="https://resmino.github.io/tags/java%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java标识符和基本数据类型</title>
    <link href="https://resmino.github.io/2023/084addbb94.html"/>
    <id>https://resmino.github.io/2023/084addbb94.html</id>
    <published>2023-08-04T05:34:01.000Z</published>
    <updated>2023-08-04T07:27:09.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li><p>组成：字母、数字、下划线</p></li><li><p>关键字：48个</p></li><li><p>驼峰命名：若变量由多个单词组成，第一个单词首字母小写，其他单词首字母大写</p></li></ul><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p>分为基本数据类型和应用数据类型。</p><ul><li><p>八大基本数据类型：</p><ul><li>byte：1字节</li><li>char：2</li><li>short：2</li><li>int：4</li><li>long：8</li><li>float：4</li><li>double：8</li><li>boolean：1,    true,false</li></ul></li><li><p>数据存储</p><ul><li>永久存储：MySQL、sqlserver，oracle，nosql等</li><li>瞬时存储：中间数据，程序结束后空间回收</li></ul></li><li><p>常量：</p><ul><li>使用final定义</li><li>命名规则：字母全大写</li></ul></li><li><p>变量：</p><ul><li>定义：根据数据类型进行定义</li><li>命名：驼峰规范</li><li>使用步骤<ul><li>声明变量：声明相应数据类型的变量，int a;   (一般声明和初始化同时进行，int a &#x3D; 0;)</li><li>初始化：使用&#x3D;赋值，为变量名指向的地址空间存入数据 a&#x3D;0;</li><li>使用：在代码中通过变量名操作数据  System.out.println(a);   —0</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">float</span> score <span class="token operator">=</span> <span class="token number">98.5f</span><span class="token punctuation">;</span><span class="token class-name">String</span> course <span class="token operator">=</span> <span class="token string">"Java课"</span><span class="token punctuation">;</span><span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span><span class="token keyword">char</span> sex <span class="token operator">=</span> <span class="token char">'男'</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>course<span class="token operator">+</span><span class="token string">"最高成绩是："</span><span class="token operator">+</span>score<span class="token operator">+</span><span class="token string">"\n最高分学员姓名："</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"\n最高分学员性别："</span><span class="token operator">+</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>类型转换</p><ul><li>强制类型转换：使用（）进行强制类型转换，会产生精度损失</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">char</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token number">99</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>*out<span class="token operator">*</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//   c</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>自动类型转换：自下向上转换</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token char">'a'</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>*out<span class="token operator">*</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//97</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>BigDecimal:用以计算过程中精度要求高，不能随意截断的数据，eg：money</li></ul></li></ul>]]></content>
    
    
    <summary type="html">学习笔记-Java标识符和基本数据类型</summary>
    
    
    
    <category term="学习笔记" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
    <category term="java" scheme="https://resmino.github.io/tags/java/"/>
    
    <category term="java教程" scheme="https://resmino.github.io/tags/java%E6%95%99%E7%A8%8B/"/>
    
    <category term="java知识总结" scheme="https://resmino.github.io/tags/java%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java基础</title>
    <link href="https://resmino.github.io/2023/08f7ede91d.html"/>
    <id>https://resmino.github.io/2023/08f7ede91d.html</id>
    <published>2023-08-04T02:42:54.000Z</published>
    <updated>2023-08-04T07:26:45.711Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、java环境安装"><a href="#1、java环境安装" class="headerlink" title="1、java环境安装"></a>1、java环境安装</h2><ul><li>jdk8安装：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTkxNTY0Ny9hcnRpY2xlL2RldGFpbHMvMTMxMDM4NzkzP3NwbT0xMDAxLjIwMTQuMzAwMS41NTAx">点击跳转查看安装教程<i class="fa fa-external-link-alt"></i></span></li><li>安装eclipse：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MzQ0NTg2L2FydGljbGUvZGV0YWlscy8xMjM5NDI2ODU=">点击跳转<i class="fa fa-external-link-alt"></i></span></li><li>idea：教程网上搜吧，一堆</li></ul><h2 id="2、记事本"><a href="#2、记事本" class="headerlink" title="2、记事本"></a>2、记事本</h2><p>记事本运行java文件</p><ul><li>使用记事本新建文件，编写java程序</li><li>将后缀名改为.java</li><li>在命令提示符进入java文件所在位置</li><li>然后使用命令javac chengxu.java编译</li><li>使用命令java chengxu 运行</li></ul><h2 id="3、idea"><a href="#3、idea" class="headerlink" title="3、idea"></a>3、idea</h2><p>编写简单输出语句，熟悉ide用法，idea是真的好用哦</p>]]></content>
    
    
    <summary type="html">学习笔记-java基础，jdk安装及环境配置，以及ide的选择（eclipse和idea）</summary>
    
    
    
    <category term="学习笔记" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java" scheme="https://resmino.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
    <category term="java" scheme="https://resmino.github.io/tags/java/"/>
    
    <category term="java教程" scheme="https://resmino.github.io/tags/java%E6%95%99%E7%A8%8B/"/>
    
    <category term="java知识总结" scheme="https://resmino.github.io/tags/java%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Windows快捷打开管理员模式命令行方式</title>
    <link href="https://resmino.github.io/2023/08e0ceff35.html"/>
    <id>https://resmino.github.io/2023/08e0ceff35.html</id>
    <published>2023-08-02T11:40:43.000Z</published>
    <updated>2023-08-03T13:20:24.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="鼠标点击启动"><a href="#鼠标点击启动" class="headerlink" title="鼠标点击启动"></a>鼠标点击启动</h1><ul><li>windows搜索框搜索cmd或者命令行,如下所示：</li></ul><img data-src="/2023/08e0ceff35/image-20230802195303970.png" class><h1 id="Win-R启动"><a href="#Win-R启动" class="headerlink" title="Win+R启动"></a>Win+R启动</h1><ul><li>使用Win+R快捷键，然后输入cmd后，再次使用Ctrl+Shift+Enter快捷键打开管理员模式命令行</li></ul><h1 id="为打开管理员模式命令行设置快捷键"><a href="#为打开管理员模式命令行设置快捷键" class="headerlink" title="为打开管理员模式命令行设置快捷键"></a>为打开管理员模式命令行设置快捷键</h1><ol><li>windows搜索框搜索cmd，然后点击打开文件位置，如下图所示</li></ol><img data-src="/2023/08e0ceff35/image-20230802195748221.png" class><ol start="2"><li>进入文件后，把下面的命令提示符快捷方式复制一份放在桌面，如下所示：</li></ol><img data-src="/2023/08e0ceff35/image-20230802202441605.png" class><ol start="3"><li>复制后，先重命名一下，我这里命名的是命令提示符管理员，以便于移回原先的文件夹(放在桌面不美观，当然你也可以选择自己想要放的位置，并不影响)，重命名后剪切移动到原来的位置，如下所示：</li></ol><img data-src="/2023/08e0ceff35/image-20230802203013311.png" class><ol start="4"><li>右键重命名后得到的快捷方式，选择属性，然后选择自己记得住且不会冲突的快捷键，我选择的是Ctrl+K如下所示：</li></ol><img data-src="/2023/08e0ceff35/image-20230802203458849.png" class><img data-src="/2023/08e0ceff35/image-20230802203707536.png" class><ol start="5"><li>然后点击高级，勾选用管理员身份运行，之后点击确定和应用即可。</li></ol><ol start="6"><li><p>然后使用快捷键即可快捷使用管理员模式命令提示符</p><img data-src="/2023/08e0ceff35/image-20230802204059861.png" class></li></ol>]]></content>
    
    
    <summary type="html">Windows 快捷打开管理员模式命令行方式</summary>
    
    
    
    <category term="Windows" scheme="https://resmino.github.io/categories/Windows/"/>
    
    <category term="Windows命令" scheme="https://resmino.github.io/categories/Windows/Windows%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="cmd" scheme="https://resmino.github.io/tags/cmd/"/>
    
    <category term="管理员模式cmd" scheme="https://resmino.github.io/tags/%E7%AE%A1%E7%90%86%E5%91%98%E6%A8%A1%E5%BC%8Fcmd/"/>
    
    <category term="管理员命令行" scheme="https://resmino.github.io/tags/%E7%AE%A1%E7%90%86%E5%91%98%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础标签</title>
    <link href="https://resmino.github.io/2023/088c85f492.html"/>
    <id>https://resmino.github.io/2023/088c85f492.html</id>
    <published>2023-08-02T08:54:14.000Z</published>
    <updated>2023-08-02T09:01:28.542Z</updated>
    
    
    <summary type="html">HTML知识-HTML基础标签</summary>
    
    
    
    <category term="HTML教程" scheme="https://resmino.github.io/categories/HTML%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="html" scheme="https://resmino.github.io/tags/html/"/>
    
    <category term="HTML教程" scheme="https://resmino.github.io/tags/HTML%E6%95%99%E7%A8%8B/"/>
    
    <category term="html标签" scheme="https://resmino.github.io/tags/html%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Github学生包申请(学校邮箱版，秒通过)</title>
    <link href="https://resmino.github.io/2023/08ff1be8cc.html"/>
    <id>https://resmino.github.io/2023/08ff1be8cc.html</id>
    <published>2023-08-02T02:11:55.000Z</published>
    <updated>2023-08-02T02:22:58.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注册邮箱"><a href="#注册邮箱" class="headerlink" title="注册邮箱"></a>注册邮箱</h1><p>（1）若已拥有学校邮箱可直接看下一<br>（2）没有学校邮箱参考步骤去注册</p><blockquote><p>1、浏览器搜索“自己学校名字+邮件系统”<br>2、然后根据步骤自己注册</p></blockquote><h1 id="申请github学生包"><a href="#申请github学生包" class="headerlink" title="申请github学生包"></a>申请github学生包</h1><p>这里由于我已经有学校邮箱，并且有<strong>github</strong>账号，因此不在提供github的注册。有需要的可以参考这位朋友的文章，点击跳转<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNDg3NTA4">github账号注册参考教程<i class="fa fa-external-link-alt"></i></span></p><p><em><strong>注意</strong></em>： <strong>如果是第一次申请的话，建议使用手机，因为需要手机拍照。</strong></p><ol><li><span class="exturl" data-url="aHR0cHM6Ly9lZHVjYXRpb24uZ2l0aHViLmNvbS8=">github学生包申请地址<i class="fa fa-external-link-alt"></i></span><br>点击上面的申请地址即可跳转申请。</li><li>点击<code>Join Global Campus</code></li></ol><img data-src="/2023/08ff1be8cc/ae44f6bb89e1439eaf67ed565fe98679.png" class><ol start="3"><li>点击<code>Sign up for...</code></li></ol>  <img data-src="/2023/08ff1be8cc/30e7173bca9a4adbb5632051b9bd8c05.png" class><ol start="4"><li>点击<code>get student benefits</code></li></ol>  <img data-src="/2023/08ff1be8cc/9a6bd604087a48afbb3266fae033516e.png" class><ol start="5"><li>点击<code>Add an email address</code></li></ol>  <img data-src="/2023/08ff1be8cc/731cf4ba9377420dbedbbd3e0e5e3c36.png" class><ol start="6"><li>点击蓝色字体 <code>add and verify your school-issued email address in your account settings</code></li></ol>  <img data-src="/2023/08ff1be8cc/419068f3553b4e7192c75b36283ade8f.png" class><ol start="7"><li><p>将学校邮箱填入<code>Add email address</code>下的框内，并点击<code>add</code><img data-src="/2023/08ff1be8cc/d5dd35b61e7a496c8a7058838691c6eb.png" class></p></li><li><p>添加后显示<code>Unverified,</code>需要进入学校邮箱验证邮箱<img data-src="/2023/08ff1be8cc/e18162846ca64316b05b7e42eecb3bee.png" class></p></li><li><p>点击<code>vertify your address</code></p></li></ol>  <img data-src="/2023/08ff1be8cc/639b309e0a1a45eeb1cce8c9dfdb3d62.png" class><ol start="10"><li><p>当新添加邮箱下显示如下所示，即添加成功<img data-src="/2023/08ff1be8cc/8b01d197b5ac4b81ace5d52b95640082.png" class></p></li><li><p>之后返回学生包申请界面并刷新，然后选择刚添加的学生邮箱。<img data-src="/2023/08ff1be8cc/27a758f1fdcf48a08c4d436e67673c12.png" class><br> 需要在<code>How do you plan to use GitHub</code>?下填入用途，可以参考如下模板：</p></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">I</span> am a student of （学校英文名）<span class="token punctuation">,</span> majoring in （专业英文名）<span class="token punctuation">.</span> <span class="token class-name">I</span> hope <span class="token keyword">to</span> <span class="token namespace">obtain</span> <span class="token class-name">Github</span> student <span class="token class-name"><span class="token namespace">certification<span class="token punctuation">.</span></span> I</span> want <span class="token keyword">to</span> <span class="token namespace">learn</span> more knowledge and use it on <span class="token class-name">Github<span class="token punctuation">.</span>I</span> can also upload my code <span class="token keyword">to</span> <span class="token namespace">the</span> library <span class="token keyword">for</span> <span class="token class-name"><span class="token namespace">sharing<span class="token punctuation">.</span></span>The</span> main purpose is <span class="token keyword">to</span> <span class="token namespace">learn</span> and use <span class="token keyword">this</span> student <span class="token class-name"><span class="token namespace">certification<span class="token punctuation">.</span></span> I</span> hope <span class="token class-name">Github</span> will give you <span class="token class-name"><span class="token namespace">certification<span class="token punctuation">.</span></span> Thank</span> you<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后点击<code>continue。</code></p><ol start="12"><li>之后拍自己的学生证照片上传，证明类型选择第一个即可。<img data-src="/2023/08ff1be8cc/f9953f8eb11b40a7a92a475732f68a57.png" class><br>在这一步之后，本人是秒通过的。</li></ol>]]></content>
    
    
    <summary type="html">Github学生包申请(学校邮箱版，秒通过)</summary>
    
    
    
    <category term="Git" scheme="https://resmino.github.io/categories/Git/"/>
    
    <category term="Github" scheme="https://resmino.github.io/categories/Git/Github/"/>
    
    
    <category term="git" scheme="https://resmino.github.io/tags/git/"/>
    
    <category term="github" scheme="https://resmino.github.io/tags/github/"/>
    
    <category term="github学生包" scheme="https://resmino.github.io/tags/github%E5%AD%A6%E7%94%9F%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>软件测试简介</title>
    <link href="https://resmino.github.io/2023/08a9f1ca1d.html"/>
    <id>https://resmino.github.io/2023/08a9f1ca1d.html</id>
    <published>2023-08-02T02:03:56.000Z</published>
    <updated>2023-08-02T02:05:30.534Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件测试概述"><a href="#软件测试概述" class="headerlink" title="软件测试概述"></a>软件测试概述</h1><p>软件测试是指在软件开发过程中，通过对软件系统进行各种测试和验证，以检测软件中的错误和缺陷，保证软件质量，提高软件可靠性和稳定性的过程。软件测试在软件工程中起到至关重要的作用，它可以在软件发布之前发现并修复缺陷和错误，保证软件的稳定性和可靠性，提高软件的用户体验和满意度。</p><p>软件测试包括以下几个方面：</p><ul><li><p><strong>静态测试：</strong></p><blockquote><p>静态测试是指对软件系统进行非执行性的测试，如代码审查、需求审查、设计审查、文档审查等，主要用于发现软件系统中的错误和缺陷。</p></blockquote></li><li><p><strong>动态测试：</strong></p><blockquote><p>动态测试是指对软件系统进行执行性的测试，如单元测试、集成测试、系统测试、验收测试等，主要用于发现软件系统中的功能错误和性能问题。</p></blockquote></li><li><p><strong>自动化测试：</strong></p><blockquote><p>自动化测试是指使用自动化测试工具来执行软件测试，如自动化测试脚本、自动化测试工具等，可以减少手动测试的工作量，提高测试效率和准确性。</p></blockquote></li><li><p><strong>性能测试：</strong></p><blockquote><p>性能测试是指对软件系统进行性能测试，如负载测试、压力测试、并发测试等，主要用于发现软件系统中的性能问题和瓶颈。</p></blockquote></li><li><p><strong>安全测试：</strong></p><blockquote><p>安全测试是指对软件系统进行安全测试，如漏洞测试、攻击测试、数据安全测试等，主要用于发现软件系统中的安全问题和漏洞。</p></blockquote></li></ul><p>总之，软件测试是软件开发中不可或缺的一部分，它可以保证软件的质量和稳定性，为软件的发布和上线提供保障。在软件开发过程中，开发人员需要充分重视软件测试工作，并根据具体的需求和情况进行选择和应用。</p><h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><p>单元测试是软件测试中的一种测试方法，是针对软件系统中的最小单元——代码中的函数或方法进行测试的过程。单元测试旨在保证软件系统中的每个单元都能够按照预期工作，从而确保软件系统的稳定性和可靠性。<br>在进行单元测试时，开发人员通常需要遵循以下步骤：</p><ul><li><p><strong>选择单元：</strong></p><blockquote><p>选择需要进行测试的单元，通常是代码中的函数或方法。</p></blockquote></li><li><p><strong>编写测试用例：</strong></p><blockquote><p>针对每个单元编写测试用例，包括输入数据和期望输出结果。</p></blockquote></li><li><p><strong>运行测试：</strong></p><blockquote><p>运行测试用例，检查实际输出结果是否与期望结果一致。</p></blockquote></li><li><p><strong>分析测试结果：</strong></p><blockquote><p>分析测试结果，确认是否存在错误或缺陷。</p></blockquote></li><li><p><strong>修改代码：</strong></p><blockquote><p>如果测试结果存在错误或缺陷，需要对代码进行修改和优化，然后重新运行测试。</p></blockquote></li><li><p><strong>重复测试：</strong></p><blockquote><p>重复以上步骤，直到测试结果符合预期为止。</p></blockquote></li></ul><p>单元测试可以有效地发现代码中的错误和缺陷，提高软件的质量和稳定性。它可以帮助开发人员快速地发现并修复错误，避免错误的逐步积累，从而减少后期的调试和修改工作，节省时间和成本。此外，单元测试还可以提高代码的可读性和可维护性，使代码更加易于理解和修改。</p>]]></content>
    
    
    <summary type="html">软件测试介绍</summary>
    
    
    
    <category term="软件测试" scheme="https://resmino.github.io/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="https://resmino.github.io/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis简介</title>
    <link href="https://resmino.github.io/2023/083f7f462b.html"/>
    <id>https://resmino.github.io/2023/083f7f462b.html</id>
    <published>2023-08-02T02:02:42.000Z</published>
    <updated>2023-08-03T08:47:57.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介及总结"><a href="#简介及总结" class="headerlink" title="简介及总结"></a>简介及总结</h1><p><code>MyBatis</code> 是一款开源的 <code>Java</code> 持久层框架，可以帮助 <code>Java</code> 开发者简化数据库访问的流程。以下是一些 <code>MyBatis</code> 的知识总结：</p><ul><li><p><strong>SQL 映射文件</strong>：</p><blockquote><p><code>MyBatis</code> 通过 <code>SQL</code> 映射文件来定义 <code>SQL</code> 语句和 <code>Java</code> 对象之间的映射关系。<code>SQL</code> 映射文件通常包括数据查询、数据插入、数据更新、数据删除等操作，同时还包括参数传递、结果集映射等内容。</p></blockquote></li><li><p><strong>动态 SQL：</strong></p><blockquote><p><code>MyBatis</code> 支持动态 <code>SQL</code>，可以根据不同的条件生成不同的 <code>SQL</code> 语句。动态 <code>SQL</code> 包括 <code>if、choose、when、otherwise、foreach</code> 等标签，可以实现复杂的 <code>SQL</code> 查询语句。</p></blockquote></li><li><p><strong>数据库连接池：</strong></p><blockquote><p><code>MyBatis</code> 可以通过数据库连接池来管理数据库连接，可以提高应用程序的性能和响应速度。<code>MyBatis</code> 内置了多种数据库连接池实现，例如 <code>Apache Commons DBCP、C3P0、BoneCP</code> 等。</p></blockquote></li><li><p><strong>一级缓存和二级缓存：</strong></p><blockquote><p><code>MyBatis</code> 内置了一级缓存和二级缓存，可以提高数据访问的性能。一级缓存是 <code>Session</code> 级别的缓存，可以通过配置关闭或清空；二级缓存是全局级别的缓存，可以通过配置进行开启或关闭。</p></blockquote></li><li><p><strong>插件机制：</strong></p><blockquote><p><code>MyBatis</code> 支持插件机制，可以扩展 <code>MyBatis</code> 的功能。插件可以对 <code>SQL</code> 语句进行拦截和修改，还可以对查询结果进行加工和处理，插件的实现可以使用 <code>JDK</code> 动态代理或者 <code>CGLib</code> 动态代理技术。</p></blockquote></li><li><p><strong>Spring 整合：</strong></p><blockquote><p><code>MyBatis</code> 可以和 <code>Spring</code> 框架进行整合，可以实现事务管理、注解驱动等功能。<code>MyBatis-Spring</code> 提供了多种整合方式，例如通过 <code>Spring XML</code> 配置、通过 <code>Spring</code> 注解配置等。</p></blockquote></li></ul><p>总之，MyBatis 是一款成熟稳定的 Java 持久层框架，具有灵活、高效、易用等优点。在使用 MyBatis 进行开发时，需要掌握 SQL 映射文件的编写、动态 SQL 的使用、数据库连接池的配置、缓存的使用、插件机制的扩展以及和 Spring 框架的整合等知识。</p><h1 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h1><p>MyBatis 内置了多种数据库连接池实现，可以通过配置文件来选择使用哪种数据库连接池。常用的数据库连接池有以下几种：</p><ul><li><p><strong>1、PooledDataSource：</strong></p><blockquote><p>这是 MyBatis 内置的数据库连接池实现，基于 Apache Commons DBCP 实现。可以通过配置文件进行配置，例如设置最大连接数、最小连接数、连接超时时间等。</p></blockquote></li><li><p><strong>2、C3P0DataSource：</strong></p><blockquote><p>这是基于 C3P0 实现的数据库连接池，可以用于 MyBatis。C3P0 是一个开源的 JDBC 连接池，提供了高效的连接池管理，可以通过配置文件进行配置。</p></blockquote></li><li><p><strong>3、BoneCPDataSource：</strong></p><blockquote><p>这是基于 BoneCP 实现的数据库连接池，也可以用于 MyBatis。BoneCP 是一个高性能的 JDBC 连接池，提供了很多高级功能，例如闲置连接回收、分布式部署等。</p></blockquote></li></ul><p>使用 MyBatis 数据库连接池可以提高应用程序的性能和响应速度，同时还可以防止数据库连接泄漏和资源浪费。要使用 MyBatis 数据库连接池，可以按照以下步骤操作：<br>1、在 <code>pom.xml</code> 中添加数据库连接池的依赖，例如 <code>commons-dbcp、c3p0、bonecp</code> 等。<br>2、在 <strong>MyBatis</strong> 的配置文件中添加数据源的配置，例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>dataSource <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">"POOLED"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>property <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"driver"</span> <span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;jdbc.driver&#125;</span>"</span>/<span class="token operator">></span>  <span class="token operator">&lt;</span>property <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"url"</span> <span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;jdbc.url&#125;</span>"</span>/<span class="token operator">></span>  <span class="token operator">&lt;</span>property <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"username"</span> <span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;jdbc.username&#125;</span>"</span>/<span class="token operator">></span>  <span class="token operator">&lt;</span>property <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"password"</span> <span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;jdbc.password&#125;</span>"</span>/<span class="token operator">></span><span class="token operator">&lt;</span>/dataSource<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，<code>type</code> 属性指定了使用的数据库连接池类型，可以是 <code>POOLED、UNPOOLED、JNDI</code> 等。</p><p>3、配置连接池的相关参数，例如最大连接数、最小连接数、连接超时时间等。具体的参数配置可以根据不同的连接池实现进行配置。</p><p>4、在 <code>SQL</code> 映射文件中使用数据库连接池，例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>select <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token string">"getBook"</span> <span class="token assign-left variable">resultType</span><span class="token operator">=</span><span class="token string">"Book"</span><span class="token operator">></span>  SELECT * FROM books WHERE <span class="token function">id</span> <span class="token operator">=</span> <span class="token comment">#&#123;id&#125;</span><span class="token operator">&lt;</span>/select<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用 <strong>MyBatis</strong> 数据库连接池可以提高应用程序的性能和可靠性，同时还可以方便地管理数据库连接。</p>]]></content>
    
    
    <summary type="html">Mybatis-简介</summary>
    
    
    
    <category term="Mybatis教程" scheme="https://resmino.github.io/categories/Mybatis%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="mybatis" scheme="https://resmino.github.io/tags/mybatis/"/>
    
    <category term="Mybatis教程" scheme="https://resmino.github.io/tags/Mybatis%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>UML知识简要总结</title>
    <link href="https://resmino.github.io/2023/08b780455c.html"/>
    <id>https://resmino.github.io/2023/08b780455c.html</id>
    <published>2023-08-02T01:43:43.000Z</published>
    <updated>2023-08-02T01:46:46.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、简要总结"><a href="#1、简要总结" class="headerlink" title="1、简要总结"></a>1、简要总结</h1><p>UML（Unified Modeling Language，统一建模语言）是一种用于软件系统设计和开发的图形化语言。它是一种通用的、标准化的、基于面向对象的建模语言，可以用于描述和设计各种软件系统。以下是 UML 的一些常用知识点：</p><ul><li><p><strong>UML 中的基本元素：</strong></p><blockquote><p>UML 中有三种基本元素，分别是结构元素、行为元素和分组元素。结构元素包括类、接口、包、对象等，行为元素包括用例、活动、状态机等，分组元素包括组、子系统、节点等。</p></blockquote></li><li><p><strong>UML 中的类图：</strong></p><blockquote><p>类图是 UML 中最常用的图之一，用于描述系统中的类、接口、关系等元素。类图中常用的关系包括继承、实现、关联、聚合、组合等。其中，继承关系表示类之间的继承关系，实现关系表示接口的实现关系，关联关系表示两个类之间的关联关系，聚合关系表示整体与部分之间的关系，组合关系表示强关联的整体与部分之间的关系。</p></blockquote></li><li><p><strong>UML 中的时序图：</strong></p><blockquote><p>时序图是 UML 中用于描述系统中对象之间的交互关系的图形化工具。时序图中通常包含对象、生命线、消息、同步和异步消息等元素。时序图可以用于描述系统中对象之间的交互过程，包括同步和异步消息的交互过程。</p></blockquote></li><li><p><strong>UML 中的用例图：</strong></p><blockquote><p>用例图是 UML 中用于描述系统中用户和系统之间的交互的图形化工具。用例图中通常包含参与者、用例、关系等元素。用例图可以用于描述系统中的功能需求和用户需求，从而帮助开发人员和用户更好地理解系统。</p></blockquote></li><li><p><strong>UML 中的活动图：</strong></p></li></ul><blockquote><p>活动图是 UML 中用于描述系统中业务流程的图形化工具。活动图中通常包含起始节点、活动节点、决策节点、合并节点等元素。活动图可以用于描述系统中的业务流程，从而帮助开发人员更好地理解系统的业务流程。</p></blockquote>]]></content>
    
    
    <summary type="html">UML知识点简要总结，常用的UML图快速上手</summary>
    
    
    
    <category term="软件工程" scheme="https://resmino.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
    <category term="UML" scheme="https://resmino.github.io/tags/UML/"/>
    
    <category term="UML知识总结" scheme="https://resmino.github.io/tags/UML%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>软件工程开发方法总结</title>
    <link href="https://resmino.github.io/2023/08b31810d4.html"/>
    <id>https://resmino.github.io/2023/08b31810d4.html</id>
    <published>2023-08-02T01:39:05.000Z</published>
    <updated>2023-08-02T01:41:09.922Z</updated>
    
    <content type="html"><![CDATA[<p><strong>软件开发方法</strong>：软件开发方法包括了传统的<strong>瀑布模型</strong>、<strong>敏捷开发</strong>、<strong>迭代开发</strong>等方法。不同的开发方法适用于不同的项目需求，开发人员需要根据具体情况选择合适的开发方法。</p><h1 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h1><p><strong>瀑布模型</strong>是一种传统的软件开发模型，它将软件开发过程分为多个阶段，每个阶段依次进行直到最终的软件交付。下面是瀑布模型的详细解释：</p><ul><li><p><strong>需求分析阶段</strong>：<br>在这个阶段，开发人员需要与客户沟通和了解项目需求，确定软件的功能和性能要求。开发人员需要编写需求规格说明书，描述软件系统的功能、性能和约束等，以便后续的设计和开发。</p></li><li><p><strong>设计阶段</strong>：<br>在这个阶段，开发人员需要基于需求规格说明书进行软件设计，包括系统架构设计、模块设计和界面设计等。开发人员需要编写软件设计文档，描述软件系统的结构、接口、算法和数据结构等。</p></li><li><p><strong>编码阶段</strong>：<br>在这个阶段，开发人员根据软件设计文档进行编码实现，编写代码并进行单元测试。开发人员需要按照编码规范和标准进行开发，并且需要进行代码审查和测试以确保代码的质量和可靠性。</p></li><li><p><strong>测试阶段</strong>：<br>在这个阶段，开发人员需要进行软件系统的集成测试和系统测试，以确保软件系统的功能和性能达到需求规格说明书中的要求。测试人员需要编写测试用例和测试脚本，进行测试并记录测试结果和问题。</p></li><li><p><strong>维护阶段</strong>：<br>在这个阶段，开发人员需要对软件系统进行维护和升级，修复已知的问题并添加新的功能。维护阶段可能会持续很长时间，直到软件系统被废弃。</p></li></ul><p><strong>瀑布模型</strong>的优点是<strong>结构清晰，开发流程明确，便于管理和控制</strong>。缺点是<strong>开发周期长、成本高，难以适应需求变化和快速迭代的需求</strong>。因此，<strong>在实际开发中，瀑布模型常常与其他软件开发方法结合使用，如增量模型、原型模型和敏捷开发等，以提高软件开发的效率和质量</strong>。</p><h1 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h1><p><strong>增量模型</strong>是一种软件开发模型，它将软件开发过程分为多个独立的增量阶段，每个阶段都是一个小的项目，包括需求分析、设计、开发、测试和发布等。每个增量都是一个可用的软件系统，可以在之后的开发过程中不断迭代和增强，直到最终满足用户的需求。</p><p>以下是增量模型的详细解释：</p><ul><li><p><strong>需求分析阶段</strong>：<br>在这个阶段，开发人员需要与客户沟通和了解项目需求，确定软件的功能和性能要求。开发人员需要编写需求规格说明书，描述软件系统的功能、性能和约束等，以便后续的设计和开发。</p></li><li><p><strong>第一个增量阶段</strong>：<br>在这个阶段，开发人员需要根据需求规格说明书进行第一个增量的设计、开发、测试和发布，该增量是一个基本的、最小的可用软件系统，包括基本的功能和用户界面。</p></li><li><p><strong>第二个增量阶段</strong>：<br>在这个阶段，开发人员需要根据用户反馈和需求变化进行第二个增量的设计、开发、测试和发布，该增量增加了新的功能和性能，同时修复了之前的问题和漏洞。</p></li><li><p><strong>后续增量阶段</strong>：<br>在这个阶段，开发人员不断地迭代和增强之前的增量，添加新的功能、性能和用户界面，同时进行测试和发布。每个增量都是一个可用的软件系统，用户可以根据需要选择使用。</p></li></ul><p><strong>增量模型</strong>的优点是<strong>开发周期短、成本低，容易适应需求变化和快速迭代的需求</strong>。缺点是<strong>每个增量都是一个独立的软件系统，可能会存在不一致性和兼容性问题，需要进行集成测试和配置管理</strong>等。因此，在实际开发中，增量模型常常与其他软件开发方法结合使用，如瀑布模型、原型模型和敏捷开发等，以提高软件开发的效率和质量。</p><h1 id="原型模型"><a href="#原型模型" class="headerlink" title="原型模型"></a>原型模型</h1><p><strong>原型模型</strong>是一种软件开发模型，它主要用于快速原型开发和验证。原型模型将软件开发过程分为两个主要阶段：<strong>快速原型开发和原型演化</strong>。在快速原型开发阶段，开发人员创建一个可用的软件原型，以验证系统的功能和性能要求。在原型演化阶段，开发人员对原型进行修改和完善，最终得到一个符合用户需求的完整软件系统。</p><p>以下是原型模型的详细解释：</p><ul><li><p><strong>快速原型开发阶段</strong>：<br>在这个阶段，开发人员与客户密切合作，了解用户需求，根据用户需求创建一个可用的软件原型。这个原型是一个快速开发的、简单的、基本的软件系统，用于验证系统的功能和性能要求。在这个阶段，开发人员不需要完全满足所有需求，只需要提供一个可用的原型，以便用户可以验证系统的功能和性能。</p></li><li><p><strong>原型演化阶段</strong>：<br>在这个阶段，开发人员需要对原型进行修改和完善，直到最终满足用户的需求。在这个阶段，开发人员需要与客户紧密合作，收集用户反馈和需求变化，根据需求变化对原型进行修改和完善。在这个阶段，开发人员需要进行测试和发布，确保软件系统符合用户需求和要求。</p></li></ul><p>原型模型的优点是<strong>开发速度快、成本低，容易适应需求变化和快速迭代的需求</strong>。缺点是原型<strong>通常是基于快速开发技术创建的，可能存在代码质量和可维护性问题，需要进行集成测试和配置管理等</strong>。因此，在实际开发中，原型模型常常与其他软件开发方法结合使用，如瀑布模型、增量模型和敏捷开发等，以提高软件开发的效率和质量。</p><h1 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h1><p><strong>敏捷开发</strong>是一种<strong>迭代的、增量的、协作的</strong>软件开发方法，它强调通过<strong>快速反馈</strong>和<strong>不断调整</strong>来满足客户需求。敏捷开发<strong>强调团队合作、快速响应变化、持续改进和可维护的代码</strong>等特点，可以帮助团队快速适应变化的需求和市场。</p><p>以下是敏捷开发的详细解释：</p><ul><li><p><strong>客户参与</strong>：<br>敏捷开发强调客户参与开发过程，包括对需求的讨论、反馈和优先级排序等。通过客户的参与，开发团队可以更好地理解用户需求和期望，以确保最终的软件系统能够满足用户需求。</p></li><li><p><strong>快速迭代</strong>：<br>敏捷开发采用迭代的方式进行软件开发，每个迭代周期通常为几周至几个月。在每个迭代周期结束时，团队会进行回顾和反馈，以确定下一步的开发方向和优先级。</p></li><li><p><strong>自组织团队</strong>：<br>敏捷开发鼓励自组织和自管理的团队，团队成员可以根据自己的技能和兴趣自由选择任务和角色。这种自组织的方式可以激发团队成员的创造力和积极性，提高团队的协作和效率。</p></li><li><p><strong>持续交付</strong>：<br>敏捷开发强调持续交付可用软件，即在开发过程中不断交付可用的软件系统，以获得快速反馈和验证。这种持续交付的方式可以减少开发风险和成本，同时增强客户对软件开发进度的掌控。</p></li><li><p><strong>反馈和改进</strong>：<br>敏捷开发鼓励团队进行反馈和改进，包括团队内部的反馈和客户的反馈。通过反馈和改进，团队可以不断提高自己的工作效率和质量水平，从而更好地满足客户需求和市场变化。</p></li></ul><p>敏捷开发的优点是<strong>适应变化、快速响应市场、强调团队协作和反馈</strong>等特点，<strong>可以帮助团队快速开发出满足用户需求的软件系统</strong>。缺点是<strong>需要更多的沟通和合作成本，对团队成员的素质要求更高，需要更多的自我学习和不断改进</strong>。因此，在实际开发中，敏捷开发通常需要配合一些项目管理工具和技术使用。</p><h1 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h1><p>DevOps是一种软件开发和运维的方法，旨在<strong>通过软件开发和运维之间的协作和自动化来实现快速交付高质量的软件</strong>。</p><p>DevOps的核心思想是<strong>将开发和运维的过程集成在一起，以实现更快速、更可靠的软件交付和更快速的反馈</strong>。DevOps通过以下几个方面来实现：</p><ul><li><p><strong>自动化</strong>：<br>DevOps强调自动化，包括自动化测试、自动化构建、自动化部署和自动化运维等。自动化可以减少手动操作，提高效率和准确性，同时可以减少人为错误。</p></li><li><p><strong>协作</strong>：<br>DevOps要求开发和运维之间进行紧密的协作，共同完成软件的开发和部署，确保软件在运行过程中的可靠性和稳定性。</p></li><li><p><strong>持续交付</strong>：<br>DevOps要求软件开发和运维的过程不断地交付软件版本，使得软件的开发、测试、部署等过程能够快速迭代和更新，以适应市场变化和用户需求。</p></li><li><p><strong>可视化和监控</strong>：<br>DevOps通过可视化和监控来跟踪软件开发和运维的过程，及时发现问题和进行调整和优化，提高软件的可靠性和稳定性。</p></li><li><p><strong>容器化</strong>：<br>DevOps推崇容器化技术，如Docker等，将软件的运行环境进行标准化和封装，使得软件的部署和运行更加便捷和高效。</p></li></ul><p>总之，DevOps是一种<strong>注重自动化、协作和持续交付</strong>的软件开发和运维方法。通过DevOps的实践，可以加快软件开发和部署的速度，提高软件的质量和可靠性，以更好地满足用户需求和市场变化。</p>]]></content>
    
    
    <summary type="html">软件开发方法：软件开发方法包括了传统的瀑布模型、敏捷开发、迭代开发等方法。不同的开发方法适用于不同的项目需求，开发人员需要根据具体情况选择合适的开发方法。</summary>
    
    
    
    <category term="软件工程" scheme="https://resmino.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
    <category term="软件工程" scheme="https://resmino.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="软件开发方法" scheme="https://resmino.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95/"/>
    
    <category term="软件开发模型" scheme="https://resmino.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>软件工程概述</title>
    <link href="https://resmino.github.io/2023/08b85236bf.html"/>
    <id>https://resmino.github.io/2023/08b85236bf.html</id>
    <published>2023-08-02T01:34:31.000Z</published>
    <updated>2023-08-02T01:38:33.471Z</updated>
    
    <content type="html"><![CDATA[<p><strong>软件工程</strong>是一门关于软件开发过程的学科，它包括了<strong>软件开发、测试、部署、运维</strong>等方面的知识。以下是一些常见的软件工程知识点：</p><h1 id="软件生命周期"><a href="#软件生命周期" class="headerlink" title="软件生命周期"></a>软件生命周期</h1><blockquote><p>软件生命周期指从软件的开发、测试、部署到维护和升级的整个过程。软件生命周期可以分为几个阶段，如计划、需求分析、设计、编码、测试、部署、维护等。</p></blockquote><h1 id="软件开发方法"><a href="#软件开发方法" class="headerlink" title="软件开发方法"></a>软件开发方法</h1><blockquote><p>软件开发方法包括了传统的瀑布模型、敏捷开发、迭代开发等方法。不同的开发方法适用于不同的项目需求，开发人员需要根据具体情况选择合适的开发方法。</p></blockquote><h1 id="软件需求分析"><a href="#软件需求分析" class="headerlink" title="软件需求分析"></a>软件需求分析</h1><blockquote><p>软件需求分析是软件开发的第一步，它的目的是确定软件的功能和性能要求，并将这些要求转化为系统能够实现的具体的功能和规格。</p></blockquote><h1 id="软件设计"><a href="#软件设计" class="headerlink" title="软件设计"></a>软件设计</h1><blockquote><p>软件设计是指根据需求分析的结果，确定软件的系统结构、模块划分、接口设计等，以实现需求分析中确定的功能和性能要求。</p></blockquote><h1 id="软件测试"><a href="#软件测试" class="headerlink" title="软件测试"></a>软件测试</h1><blockquote><p>软件测试是指对已经开发的软件进行测试和验证，以确保其符合需求和规格要求。测试包括功能测试、性能测试、安全测试、可靠性测试等。</p></blockquote><h1 id="软件部署"><a href="#软件部署" class="headerlink" title="软件部署"></a>软件部署</h1><blockquote><p>软件部署是指将已经测试通过的软件部署到用户环境中，并确保软件的正常运行。</p></blockquote><h1 id="软件维护"><a href="#软件维护" class="headerlink" title="软件维护"></a>软件维护</h1><blockquote><p>软件维护是指对已经部署的软件进行修复、更新、升级等操作，以保证软件能够持续运行并满足用户的需求。</p></blockquote><h1 id="质量保证"><a href="#质量保证" class="headerlink" title="质量保证"></a>质量保证</h1><blockquote><p>软件质量保证是确保软件开发过程中符合规范和标准，以保证软件的质量和可靠性。它包括了软件过程改进、代码审查、测试和质量度量等方面。</p></blockquote><h1 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h1><blockquote><p>软件项目管理是指对软件开发过程进行规划、组织、协调和控制，以确保项目能够按时完成、满足质量要求和预算控制。</p></blockquote><p>软件工程知识是软件开发过程中必不可少的部分，掌握这些知识可以帮助开发人员更好地理解软件开发过程，并提高软件的质量和可靠性。</p>]]></content>
    
    
    <summary type="html">软件工程概述，包括软件生命周期、软件开发方法、需求分析等知识点的简要介绍</summary>
    
    
    
    <category term="软件工程" scheme="https://resmino.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
    <category term="软件工程" scheme="https://resmino.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="https://resmino.github.io/2023/08d0edc1ed.html"/>
    <id>https://resmino.github.io/2023/08d0edc1ed.html</id>
    <published>2023-08-02T01:31:19.000Z</published>
    <updated>2023-08-02T01:33:33.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解压命令"><a href="#解压命令" class="headerlink" title="解压命令"></a>解压命令</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#gz文件</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span><span class="token comment">#xz文件</span><span class="token function">tar</span> <span class="token parameter variable">-Jxvf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建文件夹</span><span class="token function">mkdir</span> 文件夹名<span class="token comment">#文件权限 r（读） w(写） x(执行)</span><span class="token function">chmod</span> +x script<span class="token comment">#打开文件</span><span class="token builtin class-name">cd</span> 文件名<span class="token comment"># 返回上一级</span><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span><span class="token comment">#返回上一个目录</span><span class="token builtin class-name">cd</span> -<span class="token comment">#复制 文件夹后加/</span><span class="token function">cp</span> 文件1.txt wenjain.txt<span class="token comment">#重命名或移动</span><span class="token function">mv</span> 原名 现名  <span class="token comment">#保留在同一目录</span><span class="token function">mv</span> source_file destination_folder/ <span class="token comment">#移动</span><span class="token comment">#删除文件，-rf不询问 -r询问</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> 文件名<span class="token comment">#编辑文件</span><span class="token function">vim</span> 文件名<span class="token comment">#编辑后保存文件</span>ECS + ：wq加！强制退出<span class="token comment">#列出目录下neirong</span><span class="token function">ls</span><span class="token comment">#输出当前目录的绝对路径</span><span class="token builtin class-name">pwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="jdk相关"><a href="#jdk相关" class="headerlink" title="jdk相关"></a>jdk相关</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#java版本</span><span class="token function">java</span> <span class="token parameter variable">-version</span><span class="token comment">#显示java文件</span><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">java</span><span class="token comment">#删除</span><span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#wget</span><span class="token function">wget</span> 资源地址<span class="token comment">#yum </span>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="ip相关"><a href="#ip相关" class="headerlink" title="ip相关"></a>ip相关</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看ip</span><span class="token function">ip</span> addr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">Linux常用命令</summary>
    
    
    
    <category term="Linux" scheme="https://resmino.github.io/categories/Linux/"/>
    
    <category term="命令" scheme="https://resmino.github.io/categories/Linux/%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="https://resmino.github.io/tags/Linux/"/>
    
    <category term="linux" scheme="https://resmino.github.io/tags/linux/"/>
    
    <category term="linux常用命令" scheme="https://resmino.github.io/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 安装Jdk</title>
    <link href="https://resmino.github.io/2023/0824b2d547.html"/>
    <id>https://resmino.github.io/2023/0824b2d547.html</id>
    <published>2023-08-02T01:25:26.000Z</published>
    <updated>2023-08-02T01:30:23.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看centos7预装jdk"><a href="#查看centos7预装jdk" class="headerlink" title="查看centos7预装jdk"></a>查看centos7预装jdk</h1><p>使用命令查看<strong>centos7</strong>自带jdk版本<br><code>java -version</code><br>结果如图所示：</p><img data-src="/2023/0824b2d547/a4a87c81476d4e00a9472c789555305d.png" class><p>查看相关java文件，命令：<br><code>rpm -qa | grep java</code></p><img data-src="/2023/0824b2d547/5255707e36c64bf0b512d93ff50b0fbf.png" class><p>将上一步中的文件全部删除，需要注意自己的jdk版本，如果不是自己预期的jdk版本需要删除原先的版本再安装。<br>命令示例如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> java-1.8.0-openjdk-headless-1.8.0.242.b08-1.el7.x86_64<span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> java-1.8.0-openjdk-1.8.0.242.b08-1.el7.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>结果截图如下</p><img data-src="/2023/0824b2d547/b0e08b9062614d3b8a4ff9881d051856.png" class><h1 id="下载jdk"><a href="#下载jdk" class="headerlink" title="下载jdk"></a>下载jdk</h1><p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlLWpkazgtZG93bmxvYWRzLmh0bWw=">点击下载jdk<i class="fa fa-external-link-alt"></i></span></p><img data-src="/2023/0824b2d547/60548a30d2734689aaa2ef228834c93c.png" class><p>下载完成后将jdk拖入<code>/usr/local/soft/jdk1.8</code>目录位置（注意：soft和jdk1.8是自己新建的文件夹)</p><h1 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h1><p>使用命令解压</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> jdk-8u361-linux-x64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解压结果如下所示：</p><img data-src="/2023/0824b2d547/bab0996885c84386a783deeb638adfb6.png" class><p>查看解压后的文件</p><img data-src="/2023/0824b2d547/f324f76c77754985b78d204bfdf9f856.png" class><p><em><strong>配置换环境变量</strong></em><br>使用命令<code>vim /etc/profile</code><br>进入文件后按键盘 i 键<br>然后设置环境变量，示例代码如下所示（<strong>注意自己的jdk解压位置</strong>）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#set jdk envirment </span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/local/soft/jdk1.8/jdk1.8.0_361<span class="token builtin class-name">export</span> <span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/jre<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/lib:<span class="token variable">$JRE_HOME</span>/lib:<span class="token variable">$CLASSPATH</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$JRE_HOME</span>/bin:<span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>截图如下</p><img data-src="/2023/0824b2d547/111ea8fe20e54633a5ae492cffe0f48c.png" class><p>编写完成后，按<strong>ESC</strong>键之后，输入“<strong>：wq</strong>”结束并保存编辑</p><p>之后使用命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新配置结果如下</p><img data-src="/2023/0824b2d547/da7146db447b46d3afcf9f5848d1c8da.png" class>]]></content>
    
    
    <summary type="html">CentOS7 安装jdk</summary>
    
    
    
    <category term="Linux" scheme="https://resmino.github.io/categories/Linux/"/>
    
    <category term="CentOS7" scheme="https://resmino.github.io/categories/Linux/CentOS7/"/>
    
    
    <category term="Linux" scheme="https://resmino.github.io/tags/Linux/"/>
    
    <category term="CentOS7" scheme="https://resmino.github.io/tags/CentOS7/"/>
    
    <category term="jdk" scheme="https://resmino.github.io/tags/jdk/"/>
    
    <category term="centos7安装jdk" scheme="https://resmino.github.io/tags/centos7%E5%AE%89%E8%A3%85jdk/"/>
    
  </entry>
  
</feed>
